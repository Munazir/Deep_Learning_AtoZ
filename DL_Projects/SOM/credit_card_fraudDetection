# -*- coding: utf-8 -*-
"""
Created on Wed Jan 17 14:48:52 2018

@author: munazir.h
"""
##SOM###
###Credit Card Fraud Detection

#Importing the libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


#Importing the data set
creditcard_data = pd.read_csv("Credit_Card_Applications.csv")
X = creditcard_data.iloc[:,:-1]
y = creditcard_data.iloc[:,-1]

#Applying Scaling
from sklearn.preprocessing import MinMaxScaler
sc = MinMaxScaler(feature_range=(0,1))
X = sc.fit_transform(X)

#training the SOM
from minisom import MiniSom
som = MiniSom(x=10,y=10,input_len=15,learning_rate=0.5,sigma=1.0)
som.random_weights_init(X)
som.train_random(X,num_iteration=100)

##visualize the results
from pylab import bone,pcolor,colorbar,plot,show
bone()
pcolor(som.distance_map().T)
colorbar()
colors =['r','g']
markers =['o','s']

for i,x in enumerate(X):
   w=som.winner(x)
   plot(w[0]+0.5,w[1]+0.5,
        markers[y[i]],
        markeredgecolor =colors[y[i]],
        markerfacecolor ='None',
        markersize=10,
        markeredgewidth=2)
   
show()


##finding the fraud
mappings = som.win_map(X)
frauds = mappings[(9,5)]
total_fraud = np.concatenate((mappings[(9,5)],mappings[(9,7)]),axis=0)
total_fraud=sc.inverse_transform(total_fraud)
